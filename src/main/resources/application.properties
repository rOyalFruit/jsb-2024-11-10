spring.application.name=sbb

# DATABASE
spring.h2.console.enabled=true
spring.h2.console.path=/h2-console
spring.datasource.url=jdbc:h2:./db_dev;MODE=MySQL
spring.datasource.driverClassName=org.h2.Driver
spring.datasource.username=sa
spring.datasource.password=1234

# spring.h2.console.enabled: H2 콘솔에 접속할 것인지를 묻는 항목
# spring.h2.console.path: H2 콘솔로 접속하기 위한 URL 경로
# spring.datasource.url: 데이터베이스에 접속하기 위한 경로. MODE=MySQL - MySQL 문법을 사용 가능하게 함. / 파일 생성 명령어: touch db_dev.mv.db)
# spring.datasource.driverClassName: 데이터베이스에 접속할 때 사용하는 드라이버 클래스명
# spring.datasource.username: 데이터베이스의 사용자명
# spring.datasource.password: 데이터베이스의 비밀번호

# JPA
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.H2Dialect
spring.jpa.hibernate.ddl-auto=update
spring.jpa.properties.hibernate.format_sql=true 
spring.jpa.properties.hibernate.show_sql=true

# spring.jpa.properties.hibernate.dialect: 스프링 부트와 하이버네이트를 함께 사용할 때 필요한 설정 항목
# 표준 SQL이 아닌 하이버네이트만의 SQL을 사용할 때 필요한 항목으로 하이버네이트의 org.hibernate.dialect.H2Dialect 클래스를 설정
# spring.jpa.hibernate.ddl-auto: 엔티티를 기준으로 데이터의 테이블을 생성하는 규칙을 설정(설정값 종류: none, update, validate, create, create-drop)
# spring.jpa.properties.hibernate.format_sql=true: 어떤 쿼리문이 실행되는지 확인하기 위함
# spring.jpa.properties.hibernate.show_sql=true: 어떤 쿼리문이 실행되는지 확인하기 위함